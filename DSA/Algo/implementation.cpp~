#include<iostream>
#include<string>
using namespace std;
class Group1{

	  public:
		static void solve(string s){

			  int count=0;
               for(int i=0;i<s.length();i++){

				    if(s[i]=='a'||s[i]=='i'||s[i]=='o'||s[i]=='e'||s[i]=='u'||s[i]=='A'||s[i]=='I'||s[i]=='O'||s[i]=='E'||s[i]=='U'){

						  count+=1;
					}
			   }
			  cout<<count<<endl; 
		  }

		  static void sumofDigit(int num){


			  int sum=0;

			   while(num!=0){
				   int save=num%10;
				   sum+=save;
				   num/=10;
			   }

			   cout<<sum;
		  }

		  static void palindroms(string s){

			  string ori=s;

			  reverse(s.begin(),s.end());

              if(ori==s){

				  cout<<"Yes";
			  }else{
				  cout<<"No";
			  }
		  }

		  static void max3(int num1,int num2,int num3){

			   if(num1>=num2 && num1>=num3){

				    cout<<num1;

			   }else if(num2>=num1 && num2>=num3){

				    cout<<num2;

			   }else if(num3>=num1 && num3>=num2){
				   
                   cout<<num3;
			   }
		  }


		  static long long fact(int num){
			   
			   if(num<=1){
				   return 1;
			   }
			   return num*fact(num-1);
		  }
};
class  Group2{

	  public:
		  static void Rotates(vector<int>&vs){

			    rotate(vs.begin(),vs.end()-1,vs.end());

				for(auto i:vs){

					cout<<i<<" ";
				}

		  }

		  static void max_elements(vector<int>& vs) {

			  int maxi = vs[0];

			  for (int i = 0; i < vs.size(); i++) {

				  if (vs[i] > maxi) {

					  maxi = vs[i];
				  }
			  }
			  cout << maxi << endl;
		}

		static void secondLarget(vector<int>&vs){

			  
		}


};
int main(){

	   vector<int>vs;
 int size;
 cin>>size;

  for(int i=0;i<size;i++){

   int ans;
   cin>>ans;
   vs.push_back(ans);
  }

  Group2::max_elements(vs);

}
